# Makefile.in generated by automake 1.15 from Makefile.am.
# contrib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Makefile for installing Squid startup files on systems
# using a SVR4-based startup mechanism/file system layout
#

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/squid
pkgincludedir = $(includedir)/squid
pkglibdir = $(libdir)/squid
pkglibexecdir = $(libexecdir)/squid
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin21.6.0
host_triplet = x86_64-apple-darwin21.6.0
subdir = contrib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude/ax_with_prog.m4 \
	$(top_srcdir)/acinclude/init.m4 \
	$(top_srcdir)/acinclude/squid-util.m4 \
	$(top_srcdir)/acinclude/compiler-flags.m4 \
	$(top_srcdir)/acinclude/os-deps.m4 \
	$(top_srcdir)/acinclude/krb5.m4 $(top_srcdir)/acinclude/pam.m4 \
	$(top_srcdir)/acinclude/pkg.m4 \
	$(top_srcdir)/acinclude/lib-checks.m4 \
	$(top_srcdir)/acinclude/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/acinclude/ax_cxx_0x_types.m4 \
	$(top_srcdir)/helpers/basic_auth/modules.m4 \
	$(top_srcdir)/helpers/basic_auth/DB/required.m4 \
	$(top_srcdir)/helpers/basic_auth/LDAP/required.m4 \
	$(top_srcdir)/helpers/basic_auth/MSNT-multi-domain/required.m4 \
	$(top_srcdir)/helpers/basic_auth/NCSA/required.m4 \
	$(top_srcdir)/helpers/basic_auth/NIS/required.m4 \
	$(top_srcdir)/helpers/basic_auth/PAM/required.m4 \
	$(top_srcdir)/helpers/basic_auth/POP3/required.m4 \
	$(top_srcdir)/helpers/basic_auth/RADIUS/required.m4 \
	$(top_srcdir)/helpers/basic_auth/SASL/required.m4 \
	$(top_srcdir)/helpers/basic_auth/SMB/required.m4 \
	$(top_srcdir)/helpers/basic_auth/SMB_LM/required.m4 \
	$(top_srcdir)/helpers/basic_auth/SSPI/required.m4 \
	$(top_srcdir)/helpers/basic_auth/fake/required.m4 \
	$(top_srcdir)/helpers/basic_auth/getpwnam/required.m4 \
	$(top_srcdir)/helpers/digest_auth/modules.m4 \
	$(top_srcdir)/helpers/digest_auth/LDAP/required.m4 \
	$(top_srcdir)/helpers/digest_auth/eDirectory/required.m4 \
	$(top_srcdir)/helpers/digest_auth/file/required.m4 \
	$(top_srcdir)/helpers/negotiate_auth/modules.m4 \
	$(top_srcdir)/helpers/negotiate_auth/SSPI/required.m4 \
	$(top_srcdir)/helpers/negotiate_auth/kerberos/required.m4 \
	$(top_srcdir)/helpers/negotiate_auth/wrapper/required.m4 \
	$(top_srcdir)/helpers/ntlm_auth/modules.m4 \
	$(top_srcdir)/helpers/ntlm_auth/fake/required.m4 \
	$(top_srcdir)/helpers/ntlm_auth/SSPI/required.m4 \
	$(top_srcdir)/helpers/ntlm_auth/smb_lm/required.m4 \
	$(top_srcdir)/helpers/log_daemon/modules.m4 \
	$(top_srcdir)/helpers/log_daemon/DB/required.m4 \
	$(top_srcdir)/helpers/log_daemon/file/required.m4 \
	$(top_srcdir)/helpers/external_acl/modules.m4 \
	$(top_srcdir)/helpers/external_acl/AD_group/required.m4 \
	$(top_srcdir)/helpers/external_acl/LDAP_group/required.m4 \
	$(top_srcdir)/helpers/external_acl/LM_group/required.m4 \
	$(top_srcdir)/helpers/external_acl/delayer/required.m4 \
	$(top_srcdir)/helpers/external_acl/SQL_session/required.m4 \
	$(top_srcdir)/helpers/external_acl/eDirectory_userip/required.m4 \
	$(top_srcdir)/helpers/external_acl/file_userip/required.m4 \
	$(top_srcdir)/helpers/external_acl/kerberos_ldap_group/required.m4 \
	$(top_srcdir)/helpers/external_acl/session/required.m4 \
	$(top_srcdir)/helpers/external_acl/time_quota/required.m4 \
	$(top_srcdir)/helpers/external_acl/unix_group/required.m4 \
	$(top_srcdir)/helpers/external_acl/wbinfo_group/required.m4 \
	$(top_srcdir)/helpers/url_rewrite/modules.m4 \
	$(top_srcdir)/helpers/url_rewrite/fake/required.m4 \
	$(top_srcdir)/helpers/storeid_rewrite/modules.m4 \
	$(top_srcdir)/helpers/storeid_rewrite/file/required.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/autoconf.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/nigelchen/squid-3.5.23/cfgaux/missing aclocal-1.15
ADAPTATION_LIBS = adaptation/libadaptation.la
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /usr/local/opt/binutils/bin/ar
AR_R = /usr/local/opt/binutils/bin/ar r
AUTH_LIBS_TO_BUILD =  basic/libbasic.la digest/libdigest.la negotiate/libnegotiate.la ntlm/libntlm.la
AUTH_MODULES =  basic digest negotiate ntlm
AUTOCONF = ${SHELL} /Users/nigelchen/squid-3.5.23/cfgaux/missing autoconf
AUTOHEADER = ${SHELL} /Users/nigelchen/squid-3.5.23/cfgaux/missing autoheader
AUTOMAKE = ${SHELL} /Users/nigelchen/squid-3.5.23/cfgaux/missing automake-1.15
AWK = awk
BASIC_AUTH_HELPERS =  DB LDAP MSNT-multi-domain NCSA PAM POP3 RADIUS SASL SMB SMB_LM fake getpwnam
BUILDCXX = g++
BUILDCXXFLAGS = -march=native -I/usr/local/Cellar/gnutls/3.5.19/include -I/usr/local/Cellar/nettle/3.4/include -I/usr/local/Cellar/libtasn1/4.13/include -I/usr/local/Cellar/p11-kit/0.23.14/include/p11-kit-1 -g -O2 -march=native
BZR = 
CACHE_EFFECTIVE_USER = nobody
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CGIEXT = .cgi
CHMOD = /bin/chmod
CPP = gcc -E
CPPFLAGS = 
CPPUNITCONFIG = false
CRYPTLIB = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -I/usr/local/Cellar/gnutls/3.5.19/include -I/usr/local/Cellar/nettle/3.4/include -I/usr/local/Cellar/libtasn1/4.13/include -I/usr/local/Cellar/p11-kit/0.23.14/include/p11-kit-1 -g -O2 -march=native
CYGPATH_W = echo
DEFAULT_HOSTS = /etc/hosts
DEFAULT_LOG_DIR = ${prefix}/var/logs
DEFAULT_PID_FILE = ${prefix}/var/run/squid.pid
DEFAULT_SWAP_DIR = ${prefix}/var/cache/squid
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIGEST_AUTH_HELPERS =  LDAP eDirectory file
DISK_LIBS =  libBlocking.a libDiskDaemon.a libDiskThreads.a libIpcIo.a libMmapped.a
DISK_LINKOBJS =  DiskIO/Blocking/BlockingDiskIOModule.o DiskIO/DiskDaemon/DiskDaemonDiskIOModule.o DiskIO/DiskThreads/DiskThreadsDiskIOModule.o DiskIO/IpcIo/IpcIoDiskIOModule.o DiskIO/Mmapped/MmappedDiskIOModule.o
DISK_MODULES =  Blocking DiskDaemon DiskThreads IpcIo Mmapped
DISK_OS_LIBS =  -lpthread
DISK_PROGRAMS =  DiskIO/DiskDaemon/diskd
DLLTOOL = dlltool
DSYMUTIL = dsymutil
DUMPBIN = 
ECAP_LIBS = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/egrep
EPOLL_LIBS = 
EUILIB = 
EXEEXT = 
EXPATLIB = 
EXTERNAL_ACL_HELPERS =  LDAP_group SQL_session delayer eDirectory_userip file_userip kerberos_ldap_group unix_group wbinfo_group
EXT_LIBECAP_CFLAGS = 
EXT_LIBECAP_LIBS = 
FALSE = /usr/bin/false
FGREP = /usr/bin/fgrep
GREP = grep
HAVE_CXX11 = 
ICAP_LIBS = icap/libicap.la
INCLTDL = 
INSTALL = /usr/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KRB5INCS =  
KRB5LIBS =  -dynamic -Wl,-search_paths_first -lkrb5 -dynamic -Wl,-search_paths_first -lkrb5 
LBERLIB = -llber
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDAPLIB = -lldap
LDFLAGS = -g
LIBADD_DL = -ldl
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = 
LIBADD_SHL_LOAD = 
LIBGNUTLS_CFLAGS = -I/usr/local/Cellar/gnutls/3.5.19/include -I/usr/local/Cellar/nettle/3.4/include -I/usr/local/Cellar/libtasn1/4.13/include -I/usr/local/Cellar/p11-kit/0.23.14/include/p11-kit-1
LIBGNUTLS_LIBS = -L/usr/local/Cellar/gnutls/3.5.19/lib -lgnutls
LIBLTDL = -lltdl
LIBOBJS = 
LIBOPENSSL_CFLAGS = 
LIBOPENSSL_LIBS = 
LIBS = 
LIBSASL = -lsasl2
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_DB = 
LIB_KRB5_CFLAGS =  
LIB_KRB5_LIBS = -dynamic -Wl,-search_paths_first -lkrb5 -dynamic -Wl,-search_paths_first -lkrb5
LINUXDOC = /usr/bin/false
LIPO = lipo
LN = /bin/ln
LN_S = ln -s
LOG_DAEMON_HELPERS =  DB file
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_ARGZ_H = lt__argz.h
LT_CONFIG_H = include/autoconf.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /Users/nigelchen/squid-3.5.23/cfgaux/missing makeinfo
MANIFEST_TOOL = :
MINGW_LIBS = 
MKDIR = /bin/mkdir
MKDIR_P = /usr/local/bin/gmkdir -p
MV = /bin/mv
NEGOTIATE_AUTH_HELPERS =  kerberos wrapper
NETTLELIB =  -lnettle
NM = /usr/local/opt/binutils/bin/nm -B
NMEDIT = nmedit
NTLM_AUTH_HELPERS =  fake smb_lm
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = squid
PACKAGE_BUGREPORT = http://bugs.squid-cache.org/
PACKAGE_NAME = Squid Web Proxy
PACKAGE_STRING = Squid Web Proxy 3.5.23
PACKAGE_TARNAME = squid
PACKAGE_URL = 
PACKAGE_VERSION = 3.5.23
PATH_SEPARATOR = :
PERL = /usr/local/bin/perl
PKG_CONFIG = /usr/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PO2HTML = off
PO2TEXT = off
POD2MAN = /usr/local/bin/pod2man
RANLIB = ranlib
REGEXLIB = 
REPL_LIBS = liblru.a
REPL_OBJS = repl/liblru.a
REPL_POLICIES = lru
RM = /bin/rm -f
SED = /usr/bin/sed
SET_MAKE = 
SH = /bin/sh
SHELL = /bin/sh
SMBCLIENT = 
SNMPLIB = ../lib/snmplib/libsnmplib.la
SQUID_CFLAGS =  -Werror -Qunused-arguments  -D_REENTRANT
SQUID_CPPUNIT_INC = 
SQUID_CPPUNIT_LA = 
SQUID_CPPUNIT_LIBS = 
SQUID_CXXFLAGS =  -Werror -Qunused-arguments  -D_REENTRANT
SSLLIB =  -L/usr/local/Cellar/gnutls/3.5.19/lib -lgnutls 
STOREID_REWRITE_HELPERS =  file
STORE_LIBS_TO_ADD =  fs/libaufs.la fs/libdiskd.la fs/librock.la fs/libufs.la
STORE_LIBS_TO_BUILD =  libaufs.la libdiskd.la librock.la libufs.la
STORE_TESTS = 
STRIP = strip
TR = /usr/bin/tr
TRUE = /usr/bin/true
URL_REWRITE_HELPERS =  fake
VERSION = 3.5.23
WBINFO = 
WIN32_PSAPI = 
XMLLIB = 
XTRA_LIBS =  -lresolv
XTRA_OBJS = 
abs_builddir = /Users/nigelchen/squid-3.5.23/contrib
abs_srcdir = /Users/nigelchen/squid-3.5.23/contrib
abs_top_builddir = /Users/nigelchen/squid-3.5.23
abs_top_srcdir = /Users/nigelchen/squid-3.5.23
ac_ct_AR = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin21.6.0
build_alias = 
build_cpu = x86_64
build_os = darwin21.6.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin21.6.0
host_alias = 
host_cpu = x86_64
host_os = darwin21.6.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/nigelchen/squid-3.5.23/cfgaux/install-sh
krb5_config = /usr/bin/krb5-config
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
ltdl_LIBOBJS =  lt__argz.o
ltdl_LTLIBOBJS =  lt__argz.lo
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/squid
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SQUID_RC = $(top_srcdir)/tools/sysvinit/squid.rc
SQUID_OPTIONS = squid.options
EXTRA_DIST = \
	squid.options \
	config.site \
	rredir.c \
	rredir.pl \
	user-agents.pl \
	url-normalizer.pl \
	nextstep/Makefile \
	nextstep/Makefile.real \
	nextstep/README \
	nextstep/Squid.pkg.README \
	nextstep/info.in \
	nextstep/makepkg \
	nextstep/post_install \
	nextstep/pre_install \
	solaris/solaris-krb5-include.patch

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign contrib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign contrib/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	cscopelist-am ctags-am distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags-am uninstall uninstall-am

.PRECIOUS: Makefile


all: 

install: install-darwin21.6.0

install-hpux10.10 install-hpux10.20:
	$(INSTALL_BIN) $(SQUID_RC) /sbin/init.d/squid
	$(INSTALL_FILE) $(SQUID_OPTIONS) /etc/rc.config.d/squid
	-$(LN_S) ../init.d/squid /sbin/rc2.d/S900squid
	-$(LN_S) ../init.d/squid /sbin/rc1.d/K100squid
	/usr/sbin/ch_rc -ap SQUID=1
	@echo "use 'ch_rc -ap SQUID=0' to disable squid at startup"
	@echo "edit /etc/rc.config.d/squid to change options"

install-solaris2.4 install-solaris2.5:
	$(INSTALL_BIN) $(SQUID_RC) /etc/init.d/squid
	-$(LN_S) ../init.d/squid /etc/rc2.d/S90squid
	-$(LN_S) ../init.d/squid /etc/rc1.d/K10squid
	-$(LN_S) ../init.d/squid /etc/rc0.d/K10squid
	@echo "set SQUID=0 in /etc/init.d/squid to disable squid at startup"
	@echo "edit /etc/init.d/squid to change options"

install-irix6.2:
	$(INSTALL_BIN) $(SQUID_RC) /etc/init.d/squid
	$(INSTALL_FILE) $(SQUID_OPTIONS) /var/config/squid.options
	-$(LN_S) ../init.d/squid /etc/rc2.d/S99squid
	-$(LN_S) ../init.d/squid /etc/rc0.d/K01squid
	/sbin/chkconfig -f squid on
	@echo "use 'chkconfig squid off' to disable squid at startup"
	@echo "edit /var/config/squid.options to change options"

install-osf3.2:
	$(INSTALL_BIN) $(SQUID_RC) /sbin/init.d/squid
	-$(LN_S) ../init.d/squid /sbin/rc2.d/S99squid
	-$(LN_S) ../init.d/squid /sbin/rc0.d/K01squid
	/usr/sbin/rcmgr set SQUID 1
	@echo "use 'rcmgr set SQUID 0' to disable squid at startup"
	@echo "use 'rcmgr set SQUID_OPTIONS ...' to change options"
	@echo "use 'rcmgr set SQUID_RESPAWN 0' to change option"

install-linux:
	$(INSTALL_BIN) $(SQUID_RC) /sbin/init.d/squid
	-$(LN_S) ../squid /sbin/init.d/rc3.d/S90squid
	-$(LN_S) ../squid /sbin/init.d/rc3.d/K10squid
	grep '^SQUID=' /etc/rc.config || echo SQUID=1 >>/etc/rc.config
	@echo "set SQUID=0 in /etc/rc.config to disable squid at startup"
	@echo "edit /sbin/init.d/squid to change options"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
